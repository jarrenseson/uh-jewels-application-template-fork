// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  // for local development
  url      = "postgres://neondb_owner:UkiSCtnO93Vw@ep-jolly-resonance-a69myup6-pooler.us-west-2.aws.neon.tech/neondb?sslmode=require"
  // for Vercel
  // url       = "postgres://neondb_owner:UkiSCtnO93Vw@ep-jolly-resonance-a69myup6-pooler.us-west-2.aws.neon.tech/neondb?sslmode=require&pgbouncer=true&connect_timeout=15"
  // directUrl = "postgresql://neondb_owner:UkiSCtnO93Vw@ep-jolly-resonance-a69myup6.us-west-2.aws.neon.tech/neondb?sslmode=require"
}

enum Role {
  USER
  ADMIN
}

model User {
  id       Int    @id @default(autoincrement())
  email    String @unique
  password String
  role     Role   @default(USER)
}

enum Condition {
  excellent
  good
  fair
  poor
}

model Stuff {
  id        Int       @id @default(autoincrement())
  name      String
  quantity  Int
  condition Condition
  owner     String
}

model ShippingInfo {
  id        Int    @id @default(autoincrement())
  firstName String
  lastName  String
  address1  String
  address2  String
  city      String
  zip       String
  state     String
  country   String
}

model Jewels {
  id          Int    @id @default(autoincrement())
  name        String @unique
  price       Int
  image       String
  owner       String
  description String
}

model Cart {
  id        Int      @id @default(autoincrement())
  userEmail String   @unique
  jewel     String[]
}

model CartItems {
  id        Int    @id @default(autoincrement())
  owner     String
  jewelName String
  quantity  Int
  pricePerUnit Int

  @@unique([owner, jewelName])
}
